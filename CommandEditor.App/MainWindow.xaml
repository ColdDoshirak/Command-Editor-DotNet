<Window x:Class="CommandEditor.App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:core="clr-namespace:CommandEditor.Core.Models;assembly=CommandEditor.Core"
        xmlns:conv="clr-namespace:CommandEditor.App.Converters"
        xmlns:views="clr-namespace:CommandEditor.App.Views"
        mc:Ignorable="d"
        Title="Command Editor"
        Width="1200"
        Height="800"
        MinWidth="1024"
        MinHeight="720">
    <Window.Resources>
        <ObjectDataProvider x:Key="CommandPermissionValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="core:CommandPermission" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="CommandUsageValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="core:CommandUsage" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <conv:NullToBoolConverter x:Key="NullToBool" />
        
        <Style TargetType="Button">
            <Setter Property="MinWidth" Value="80" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="Margin" Value="5,0,0,0" />
        </Style>
        
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,8,0" />
        </Style>
        
        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="4,3" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        
        <Style TargetType="GroupBox">
            <Setter Property="Padding" Value="10" />
            <Setter Property="BorderBrush" Value="#CCCCCC" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
    </Window.Resources>

    <Grid>
        <Grid>
            <TabControl>
            <TabItem Header="Commands">
                <Grid Margin="15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                        <TextBlock Text="Search:" />
                        <TextBox Width="220" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0" />
                        <Button Content="Clear" Command="{Binding ClearSearchCommand}" MinWidth="60" />
                        <Rectangle Width="1" Fill="#E0E0E0" Margin="15,0" />
                        <TextBlock Text="Current file:" Margin="0,0,8,0" FontWeight="SemiBold" />
                        <TextBlock Text="{Binding CurrentFile}" TextTrimming="CharacterEllipsis" Width="280" Margin="0" />
                        <Rectangle Width="1" Fill="#E0E0E0" Margin="15,0" />
                        <Button Content="Load..." Click="OnLoadCommands" />
                        <Button Content="Save" Click="OnSaveCommands" />
                        <Button Content="Save As..." Click="OnSaveCommandsAs" MinWidth="90" />
                        <Button Content="Save Legacy Format" Click="OnSaveLegacyFormat" MinWidth="140" />
                    </StackPanel>

                    <Grid Grid.Row="1" Margin="0,10,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DataGrid Grid.Row="0"
                                  ItemsSource="{Binding CommandsView}"
                                  SelectedItem="{Binding SelectedCommand, Mode=TwoWay}"
                                  AutoGenerateColumns="False"
                                  CanUserAddRows="False"
                                  IsReadOnly="False"
                                  AlternatingRowBackground="#F8F8F8"
                                  GridLinesVisibility="Horizontal"
                                  HeadersVisibility="Column"
                                  RowHeight="28"
                                  Margin="0,0,0,15">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Command" Binding="{Binding Command}" Width="110" />
                                <DataGridComboBoxColumn Header="Permission" SelectedItemBinding="{Binding Permission}" ItemsSource="{Binding Source={StaticResource CommandPermissionValues}}" Width="90" />
                                <DataGridTextColumn Header="Info" Binding="{Binding Info}" Width="100" />
                                <DataGridTextColumn Header="Group" Binding="{Binding Group}" Width="90" />
                                <DataGridTextColumn Header="Response" Binding="{Binding Response}" Width="*" MinWidth="150" />
                                <DataGridTextColumn Header="Cooldown" Binding="{Binding Cooldown}" Width="70" />
                                <DataGridTextColumn Header="UserCD" Binding="{Binding UserCooldown}" Width="60" />
                                <DataGridTextColumn Header="Cost" Binding="{Binding Cost}" Width="50" />
                                <DataGridTextColumn Header="Count" Binding="{Binding Count}" Width="50" />
                                <DataGridComboBoxColumn Header="Usage" SelectedItemBinding="{Binding Usage}" ItemsSource="{Binding Source={StaticResource CommandUsageValues}}" Width="100" />
                                <DataGridCheckBoxColumn Header="Enabled" Binding="{Binding Enabled}" Width="65" />
                                <DataGridTextColumn Header="Sound File" Binding="{Binding SoundFile}" Width="2*" MinWidth="120" />
                                <DataGridTextColumn Header="FK Sound" Binding="{Binding FkSoundFile}" Width="2*" MinWidth="120" />
                                <DataGridTextColumn Header="Vol" Binding="{Binding Volume}" Width="45" />
                            </DataGrid.Columns>
                        </DataGrid>

                        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,15">
                            <Button Content="Add" Command="{Binding AddCommandCommand}" Margin="0,0,5,0" />
                            <Button Content="Remove" Command="{Binding RemoveCommandCommand}" />
                            <Button Content="Duplicate" Command="{Binding DuplicateCommandCommand}" MinWidth="90" />
                            <Button Content="Auto-Assign Sounds" MinWidth="140" Click="OnAutoAssignSounds" Margin="15,0,0,0" />
                            <Button Content="Export Legacy" MinWidth="110" Click="OnExportLegacyFormat" Margin="15,0,0,0" />
                        </StackPanel>

                        <GroupBox Grid.Row="2" Header="Auto-Save" Margin="0,0,0,15">
                            <StackPanel Orientation="Horizontal">
                                <CheckBox Content="Enable" IsChecked="{Binding AutoSaveEnabled}" Margin="0,0,20,0" VerticalAlignment="Center" />
                                <TextBlock Text="Interval (seconds):" />
                                <TextBox Width="70" Text="{Binding AutoSaveIntervalSeconds, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,10,0" />
                                <Button Content="Run Now" Click="OnRunAutoSave" MinWidth="90" />
                            </StackPanel>
                        </GroupBox>

                        <Grid Grid.Row="3" Margin="0,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <GroupBox Header="Command Details" Grid.Column="0" Margin="0,0,15,0">
                                <Grid DataContext="{Binding SelectedCommand}">
                                    <Grid.IsEnabled>
                                        <Binding RelativeSource="{RelativeSource AncestorType=GroupBox}" Path="DataContext.SelectedCommand" Converter="{StaticResource NullToBool}" />
                                    </Grid.IsEnabled>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Row 0: Command and Permission -->
                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Command:" Margin="0,0,8,5" />
                                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Command, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,15,5" />
                                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Permission:" Margin="0,0,8,5" />
                                    <ComboBox Grid.Row="0" Grid.Column="3" ItemsSource="{Binding Source={StaticResource CommandPermissionValues}}" SelectedItem="{Binding Permission}" Margin="0,0,0,5" />

                                    <!-- Row 1: Info and Group -->
                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Info:" Margin="0,0,8,5" />
                                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Info, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,15,5" />
                                    <TextBlock Grid.Row="1" Grid.Column="2" Text="Group:" Margin="0,0,8,5" />
                                    <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Group, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5" />

                                    <!-- Row 2: Response (full width) -->
                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Response:" Margin="0,0,8,5" />
                                    <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" Text="{Binding Response, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5" AcceptsReturn="True" Height="45" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" />

                                    <!-- Row 3: Cooldown, User Cooldown, Cost in 3 columns -->
                                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Cooldown:" Margin="0,0,8,5" />
                                    <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Cooldown, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,15,5" Width="80" HorizontalAlignment="Left" />
                                    <TextBlock Grid.Row="3" Grid.Column="2" Text="User CD:" Margin="0,0,8,5" />
                                    <StackPanel Grid.Row="3" Grid.Column="3" Orientation="Horizontal" Margin="0,0,0,5">
                                        <TextBox Text="{Binding UserCooldown, UpdateSourceTrigger=PropertyChanged}" Width="80" Margin="0,0,15,0" />
                                        <TextBlock Text="Cost:" Margin="0,0,8,0" />
                                        <TextBox Text="{Binding Cost, UpdateSourceTrigger=PropertyChanged}" Width="80" />
                                    </StackPanel>

                                    <!-- Row 4: Enabled, Usage, Count -->
                                    <CheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Content="Enabled" IsChecked="{Binding Enabled}" Margin="0,0,15,0" VerticalAlignment="Center" />
                                    <TextBlock Grid.Row="4" Grid.Column="2" Text="Usage:" Margin="0,0,8,0" />
                                    <ComboBox Grid.Row="4" Grid.Column="3" ItemsSource="{Binding Source={StaticResource CommandUsageValues}}" SelectedItem="{Binding Usage}" Width="140" HorizontalAlignment="Left" />
                                </Grid>
                            </GroupBox>

                            <StackPanel Grid.Column="1">
                                <GroupBox Header="Sound" DataContext="{Binding SelectedCommand}">
                                    <GroupBox.IsEnabled>
                                        <Binding RelativeSource="{RelativeSource Self}" Path="DataContext" Converter="{StaticResource NullToBool}" />
                                    </GroupBox.IsEnabled>
                                    <StackPanel>
                                        <Grid Margin="0,0,0,5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="Primary:" Width="60" />
                                            <TextBox Grid.Column="1" Text="{Binding SoundFile, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0" />
                                            <Button Grid.Column="2" Content="..." Click="OnBrowseSoundFile" Tag="Primary" Width="30" Padding="2" Margin="0,0,5,0" ToolTip="Browse for primary sound file" />
                                            <Button Grid.Column="3" Name="PlaySoundButton" Content="Play" Click="OnPlaySound" Width="60" Padding="5,3" Margin="0,0,5,0" ToolTip="Play sound" />
                                            <Button Grid.Column="4" Name="ForceStopButton" Content="Force Stop" Click="OnForceStopSound" Width="80" Padding="5,3" Margin="0" ToolTip="Force stop any playing sound" />
                                        </Grid>
                                        <Grid Margin="0,0,0,5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="Fallback:" Width="60" />
                                            <TextBox Grid.Column="1" Text="{Binding FkSoundFile, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0" />
                                            <Button Grid.Column="2" Content="..." Click="OnBrowseSoundFile" Tag="Fallback" Width="30" Padding="2" Margin="0" ToolTip="Browse for fallback sound file" />
                                        </Grid>
                                        <Grid Margin="0,0,0,5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="Volume:" Width="60" />
                                            <Slider Grid.Column="1" Minimum="0" Maximum="100" Value="{Binding Volume, UpdateSourceTrigger=PropertyChanged}" TickFrequency="1" IsSnapToTickEnabled="True" Margin="0,0,8,0" />
                                            <TextBlock Grid.Column="2" Text="{Binding Volume, StringFormat={}{0}%}" Width="45" TextAlignment="Right" Margin="0" />
                                        </Grid>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="Folder:" Width="60" />
                                            <TextBox Grid.Column="1" Text="{Binding DataContext.SoundDirectory, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}" IsReadOnly="True" Margin="0,0,5,0" />
                                            <Button Grid.Column="2" Content="..." Click="OnSelectSoundDirectory" Width="30" Padding="2" Margin="0" ToolTip="Set sound folder" />
                                        </Grid>
                                    </StackPanel>
                                </GroupBox>

                                <GroupBox Header="Global Sound" Margin="0,10,0,0">
                                    <StackPanel>
                                        <Grid Margin="0,0,0,5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="Master Vol:" Width="70" />
                                            <Slider Grid.Column="1" Minimum="0" Maximum="1" SmallChange="0.01" LargeChange="0.1" TickFrequency="0.01" IsSnapToTickEnabled="True" Value="{Binding Volume, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,8,0" />
                                            <TextBlock Grid.Column="2" Text="{Binding Volume, StringFormat={}{0:P0}}" Width="45" TextAlignment="Right" Margin="0" />
                                        </Grid>
                                        <CheckBox Content="Allow interrupt" IsChecked="{Binding AllowSoundInterruption}" Margin="0,0,0,3" />
                                        <CheckBox Content="Show block msg" IsChecked="{Binding ShowInterruptionMessage}" />
                                    </StackPanel>
                                </GroupBox>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem Header="Twitch">
                <Grid Margin="15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2" Margin="0,0,0,15">
                        <TextBlock Text="Channel:" Width="70" />
                        <TextBox Width="200" Text="{Binding TwitchChannel, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,15,0" />
                        <Button Content="Manage Tokens..." Click="OnManageTwitchTokens" MinWidth="130" />
                        <Button Content="Save" Click="OnSaveTwitchSecrets" />
                        <Rectangle Width="1" Fill="#E0E0E0" Margin="10,0" />
                        <Button Content="Connect" Command="{Binding ConnectTwitchCommand}" Margin="0" />
                        <Button Content="Disconnect" Command="{Binding DisconnectTwitchCommand}" />
                        <Button Content="Check Connection" Click="OnCheckConnection" Margin="5,0,0,0" />
                    </StackPanel>

                    <GroupBox Header="Chat" Grid.Row="1" Margin="0,0,15,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ListBox ItemsSource="{Binding TwitchMessages}" BorderThickness="1" BorderBrush="#CCCCCC" />
                            <Grid Grid.Row="1" Margin="0,10,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding PendingMessage, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0" />
                                <Button Grid.Column="1" Content="Send" Command="{Binding SendTwitchMessageCommand}" MinWidth="80" Margin="0" />
                            </Grid>
                        </Grid>
                    </GroupBox>

                    <GroupBox Header="Viewers" Grid.Column="1" Grid.Row="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            
                            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="5">
                                <Button Content="Refresh" Click="OnRefreshViewers" MinWidth="70" Margin="0,0,5,0" />
                                <TextBlock Text="Update every:" VerticalAlignment="Center" Margin="0,0,5,0" />
                                <ComboBox x:Name="ViewersUpdateIntervalComboBox" Width="80" SelectedIndex="1" SelectionChanged="OnViewersIntervalChanged">
                                    <ComboBoxItem Content="10 sec" Tag="10" />
                                    <ComboBoxItem Content="30 sec" Tag="30" />
                                    <ComboBoxItem Content="60 sec" Tag="60" />
                                    <ComboBoxItem Content="2 min" Tag="120" />
                                    <ComboBoxItem Content="5 min" Tag="300" />
                                </ComboBox>
                            </StackPanel>
                            
                            <TabControl Grid.Row="1">
                                <TabItem Header="All Viewers">
                                    <ListBox ItemsSource="{Binding TwitchViewers}" BorderThickness="0" />
                                </TabItem>
                                <TabItem Header="Active Chatters">
                                    <ListBox ItemsSource="{Binding TwitchActiveChatters}" BorderThickness="0" />
                                </TabItem>
                            <TabItem Header="Moderators">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    
                                    <ListBox x:Name="ModeratorsList" Grid.Row="0" BorderThickness="0" Margin="0,0,0,10" />
                                    
                                    <Grid Grid.Row="1" Margin="0,0,0,5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBox x:Name="AddModeratorInput" Grid.Column="0" Margin="0,0,5,0" />
                                        <Button Grid.Column="1" Content="Add" Click="OnAddModerator" MinWidth="60" Margin="0,0,5,0" />
                                        <Button Grid.Column="2" Content="Remove" Click="OnRemoveModerator" MinWidth="60" />
                                    </Grid>
                                    
                                    <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,0,0,5">
                                        <Button Content="Open File" Click="OnOpenModeratorsFile" MinWidth="80" Margin="0,0,5,0" />
                                        <Button Content="Refresh" Click="OnRefreshModerators" MinWidth="80" />
                                    </StackPanel>
                                    
                                    <TextBlock Grid.Row="3" Text="Blue - API, Green - Manual, Purple - Both, Red - Excluded&#x0a;moderators.json is safe to show on stream" 
                                               FontSize="10" Foreground="Gray" TextWrapping="Wrap" />
                                </Grid>
                            </TabItem>
                            </TabControl>
                        </Grid>
                    </GroupBox>

                    <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="0,10,0,0">
                        <TextBlock Text="{Binding TwitchConnectionStatus}" FontWeight="Bold" Margin="0,0,20,0" />
                        <TextBlock Text="{Binding TwitchStreamStatus}" Margin="0,0,20,0" />
                        <TextBlock Text="{Binding TwitchActiveViewersCount}" Margin="0,0,10,0" />
                        <TextBlock Text="{Binding TwitchAllViewersCount}" />
                    </StackPanel>
                </Grid>
            </TabItem>

            <TabItem Header="Currency Settings">
                <ScrollViewer Margin="15">
                    <StackPanel Orientation="Vertical" MaxWidth="800" HorizontalAlignment="Left">
                        <GroupBox Header="General" Margin="0,0,0,15">
                            <StackPanel Orientation="Horizontal">
                                <CheckBox Content="Accumulation Enabled" IsChecked="{Binding CurrencySettings.AccumulationEnabled}" Margin="0,0,20,0" />
                                <CheckBox Content="Show Service Messages" IsChecked="{Binding CurrencySettings.ShowServiceMessages}" Margin="0,0,20,0" />
                                <CheckBox Content="Take offline hours in to account" IsChecked="{Binding CurrencySettings.TrackOfflineHours}" />
                            </StackPanel>
                        </GroupBox>
                        
                        <GroupBox Header="Currency Settings" Margin="0,0,0,15">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Command:" Margin="0,0,10,8" />
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding CurrencySettings.Command}" Margin="0,0,20,8" />
                                
                                <TextBlock Grid.Row="0" Grid.Column="2" Text="Name:" Margin="0,0,10,8" />
                                <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding CurrencySettings.Name}" Margin="0,0,0,8" />
                                
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Response:" Margin="0,0,10,8" />
                                <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" Text="{Binding CurrencySettings.Response}" Margin="0,0,0,8" />
                                
                                <TextBlock Grid.Row="2" Grid.Column="0" Text="Cooldown (s):" Margin="0,0,10,0" />
                                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding CurrencySettings.CooldownSeconds}" Margin="0" />
                            </Grid>
                        </GroupBox>
                        
                        <GroupBox Header="Intervals">
                            <StackPanel>
                                <Grid Margin="0,0,0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="140" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="40" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Online Interval (min):" VerticalAlignment="Center" />
                                    <Slider Grid.Column="1" Minimum="1" Maximum="60" Value="{Binding CurrencySettings.OnlineIntervalMinutes}" 
                                            TickFrequency="1" TickPlacement="BottomRight" IsSnapToTickEnabled="True" Margin="10,0" 
                                            ValueChanged="OnCurrencySettingChanged" />
                                    <TextBlock Grid.Column="2" Text="{Binding CurrencySettings.OnlineIntervalMinutes}" VerticalAlignment="Center" />
                                </Grid>
                                <Grid Margin="0,0,0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="140" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="40" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Offline Interval (min):" VerticalAlignment="Center" />
                                    <Slider Grid.Column="1" Minimum="1" Maximum="60" Value="{Binding CurrencySettings.OfflineIntervalMinutes}" 
                                            TickFrequency="1" TickPlacement="BottomRight" IsSnapToTickEnabled="True" Margin="10,0" 
                                            ValueChanged="OnCurrencySettingChanged" />
                                    <TextBlock Grid.Column="2" Text="{Binding CurrencySettings.OfflineIntervalMinutes}" VerticalAlignment="Center" />
                                </Grid>
                                <TextBlock Text="{Binding IntervalInfoText}" HorizontalAlignment="Center" FontStyle="Italic" Foreground="Gray" Margin="0,5,0,0" />
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Payout">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                
                                <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,10,0">
                                    <TextBlock Text="Live Payout:" Margin="0,0,0,5" />
                                    <TextBox Text="{Binding CurrencySettings.LivePayout, UpdateSourceTrigger=PropertyChanged}" TextChanged="OnCurrencySettingChanged" />
                                </StackPanel>
                                
                                <StackPanel Grid.Row="0" Grid.Column="1" Margin="0,0,10,0">
                                    <TextBlock Text="Offline Payout:" Margin="0,0,0,5" />
                                    <TextBox Text="{Binding CurrencySettings.OfflinePayout, UpdateSourceTrigger=PropertyChanged}" TextChanged="OnCurrencySettingChanged" />
                                </StackPanel>
                                
                                <StackPanel Grid.Row="0" Grid.Column="2" Margin="0,0,10,0">
                                    <TextBlock Text="Regular Bonus:" Margin="0,0,0,5" />
                                    <TextBox Text="{Binding CurrencySettings.RegularBonus, UpdateSourceTrigger=PropertyChanged}" TextChanged="OnCurrencySettingChanged" />
                                </StackPanel>
                                
                                <StackPanel Grid.Row="0" Grid.Column="3" Margin="0,0,10,0">
                                    <TextBlock Text="Sub Bonus:" Margin="0,0,0,5" />
                                    <TextBox Text="{Binding CurrencySettings.SubBonus, UpdateSourceTrigger=PropertyChanged}" TextChanged="OnCurrencySettingChanged" />
                                </StackPanel>
                                
                                <StackPanel Grid.Row="0" Grid.Column="4" Margin="0,0,10,0">
                                    <TextBlock Text="Mod Bonus:" Margin="0,0,0,5" />
                                    <TextBox Text="{Binding CurrencySettings.ModBonus, UpdateSourceTrigger=PropertyChanged}" TextChanged="OnCurrencySettingChanged" />
                                </StackPanel>
                                
                                <StackPanel Grid.Row="0" Grid.Column="5">
                                    <TextBlock Text="Active Bonus:" Margin="0,0,0,5" />
                                    <TextBox Text="{Binding CurrencySettings.ActiveBonus, UpdateSourceTrigger=PropertyChanged}" TextChanged="OnCurrencySettingChanged" />
                                </StackPanel>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Event Payout">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                
                                <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,10,0">
                                    <TextBlock Text="On Raid:" Margin="0,0,0,5" />
                                    <TextBox Text="{Binding CurrencySettings.RaidAward}" />
                                </StackPanel>
                                
                                <StackPanel Grid.Row="0" Grid.Column="1" Margin="0,0,10,0">
                                    <TextBlock Text="On Follow:" Margin="0,0,0,5" />
                                    <TextBox Text="{Binding CurrencySettings.FollowAward}" />
                                </StackPanel>
                                
                                <StackPanel Grid.Row="0" Grid.Column="2" Margin="0,0,10,0">
                                    <TextBlock Text="On Sub:" Margin="0,0,0,5" />
                                    <TextBox Text="{Binding CurrencySettings.SubAward}" />
                                </StackPanel>
                                
                                <StackPanel Grid.Row="0" Grid.Column="3">
                                    <TextBlock Text="On Host:" Margin="0,0,0,5" />
                                    <TextBox Text="{Binding CurrencySettings.HostAward}" />
                                </StackPanel>
                            </Grid>
                        </GroupBox>
                        
                        <Button Content="Save Settings" Command="{Binding SaveCurrencySettingsCommand}" HorizontalAlignment="Left" Margin="0,15,0,0" MinWidth="120" />
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Currency Users">
                <Grid Margin="15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <DataGrid ItemsSource="{Binding CurrencyUsers}"
                              AutoGenerateColumns="False"
                              CanUserAddRows="True"
                              AlternatingRowBackground="#F8F8F8"
                              GridLinesVisibility="Horizontal"
                              HeadersVisibility="Column"
                              RowHeight="28"
                              Margin="0,0,0,15">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Username" Binding="{Binding Username}" Width="200" />
                            <DataGridTextColumn Header="Points" Binding="{Binding Points}" Width="150" />
                            <DataGridTextColumn Header="Hours" Binding="{Binding Hours}" Width="150" />
                            <DataGridTextColumn Header="Last Seen" Binding="{Binding LastSeenUtc}" Width="250" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <Button Content="Refresh" Click="OnRefreshCurrencyUsers" MinWidth="80" Margin="0,0,5,0" />
                        <Button Content="Save Users" Command="{Binding SaveCurrencyUsersCommand}" MinWidth="120" Margin="0,0,15,0" />
                        <CheckBox x:Name="AutoRefreshCurrencyCheckBox" Content="Auto-refresh" IsChecked="True" VerticalAlignment="Center" Margin="0,0,15,0" Checked="OnAutoRefreshCurrencyChanged" Unchecked="OnAutoRefreshCurrencyChanged" />
                        <TextBlock x:Name="CurrencyLastUpdateLabel" Text="Last update: Never" VerticalAlignment="Center" Foreground="Gray" />
                    </StackPanel>
                </Grid>
            </TabItem>

            <TabItem Header="History">
                <Grid Margin="15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ListView x:Name="HistoryList" BorderThickness="1" BorderBrush="#CCCCCC" Margin="0,0,0,15">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="File" Width="500" DisplayMemberBinding="{Binding FilePath}" />
                                <GridViewColumn Header="Created" Width="220" DisplayMemberBinding="{Binding CreatedAtUtc}" />
                                <GridViewColumn Header="Size (KB)" Width="140" DisplayMemberBinding="{Binding SizeBytes}" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,0,0,10">
                        <Button Content="Create Backup Now" Click="OnCreateBackup" MinWidth="140" Margin="0,0,5,0" />
                        <Button Content="Refresh" Click="OnRefreshHistory" Margin="0,0,5,0" MinWidth="80" />
                        <Button Content="View" Click="OnViewHistory" MinWidth="80" Margin="0,0,5,0" />
                        <Button Content="Restore Selected" Click="OnRestoreHistory" MinWidth="130" />
                    </StackPanel>
                    <StackPanel Grid.Row="2" Orientation="Horizontal">
                        <TextBlock Text="Max Backups:" VerticalAlignment="Center" Margin="0,0,10,0" />
                        <TextBox x:Name="MaxBackupsInput" Width="60" Text="{Binding MaxBackups}" VerticalAlignment="Center" />
                        <Button Content="Apply" Click="OnApplyMaxBackups" MinWidth="60" Margin="5,0,0,0" />
                    </StackPanel>
                </Grid>
            </TabItem>

            <TabItem Header="{Binding AboutTabStatus}">
                <views:AboutTabView x:Name="AboutTab" DataContext="{Binding AboutViewModel}" />
            </TabItem>
        </TabControl>
        </Grid>
        <Canvas x:Name="NotificationCanvas" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,20,20,0" />
        <TextBlock x:Name="UpdateIndicator" 
                   Text="New version available!" 
                   HorizontalAlignment="Right" 
                   VerticalAlignment="Top" 
                   Margin="0,20,20,0"
                   Background="#2196F3"
                   Foreground="White"
                   Padding="10,5"
                   FontWeight="Bold"
                   Panel.ZIndex="1000">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsUpdateAvailable}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </Grid>
</Window>
